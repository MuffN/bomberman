package bomberman.menu;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Insets;
import java.awt.event.ActionListener;
import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;
import java.awt.event.ActionEvent;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;

import javax.swing.SwingConstants;

import bomberman.entities.MenuPanel;
import bomberman.tools.Asset;

import javax.swing.JButton;

public class StartMenu extends MenuPanel implements ActionListener{
	/**
	 * 
	 * @author Patrick Schneider
	 * 
	 */
	private static final long serialVersionUID = 1L;
	
	private JButton[] startmenubuttons;
	private static String[] buttonNames = {"START","INSTRUCTIONS","CREDITS","QUIT GAME"};	
	
	public StartMenu() {
		
		startmenubuttons = new JButton[buttonNames.length];
		
		for(int i = 0; i < buttonNames.length; i++){

			final int curButton = i;
			
			startmenubuttons[i] = new JButton(buttonNames[i]);
			startmenubuttons[i].setFocusable(true);
			startmenubuttons[i].setMargin(new Insets(0, 0, 0, 0));
			startmenubuttons[i].setContentAreaFilled(false);
			startmenubuttons[i].setIcon(blackBackground);
			startmenubuttons[i].setOpaque(false);
			startmenubuttons[i].setForeground(Color.YELLOW);
			startmenubuttons[i].setHorizontalTextPosition(SwingConstants.CENTER);
			startmenubuttons[i].addActionListener(this);
			startmenubuttons[i].setActionCommand(buttonNames[i]);
			startmenubuttons[i].addKeyListener(new KeyAdapter(){
				@Override
				public void keyPressed(KeyEvent e){
					switch (e.getKeyCode()){
					case KeyEvent.VK_UP:
						if(curButton > 0){
							startmenubuttons[curButton - 1].requestFocus();
						}
						break;
					case KeyEvent.VK_DOWN:
						if(curButton < 3){
							startmenubuttons[curButton + 1].requestFocus();
						}
						break;
					default:
						break;
					}
					
				}
			});
			startmenubuttons[i].addFocusListener(new FocusListener() {

		         @Override
		         public void focusLost(FocusEvent arg0) {
		        	startmenubuttons[curButton].setForeground(Color.YELLOW);
		            startmenubuttons[curButton].setIcon(blackBackground);
		         }

		         @Override
		         public void focusGained(FocusEvent arg0) {
		            startmenubuttons[curButton].setForeground(Color.RED);
		            startmenubuttons[curButton].setIcon(arrowBackground);
		      }
			});
			startmenubuttons[i].setBorder(null);
			startmenubuttons[i].setFocusPainted(false);
			startmenubuttons[i].setFont(Asset.pcsenior.deriveFont(20f));
			
		}
		
		startmenubuttons[0].setBounds(250, 410, 400, 40);
		startmenubuttons[1].setBounds(250, 450, 400, 40);
		startmenubuttons[2].setBounds(250, 490, 400, 40);
		startmenubuttons[3].setBounds(250, 530, 400, 40);
		
		startmenubuttons[0].requestFocusInWindow();
		
		for (int j = 0; j < buttonNames.length; j++){
			add(startmenubuttons[j]);
		}
	}
	
//	@Override
//	protected void paintComponent(Graphics g) {
//		super.paintComponent(g);
//		g.drawImage(Asset.menu_background_logo, 0, 0, null);
//	}
	
	@Override
	public void actionPerformed(ActionEvent ae){
		if("START".equals(ae.getActionCommand())){
			DynaMineGui.changeToNext();
		}
		if("QUIT GAME".equals(ae.getActionCommand())){
			DynaMineGui.changeToExit();
		}
	}
	
	public void setFocusFirst(){
		startmenubuttons[0].requestFocusInWindow();
	}
}
