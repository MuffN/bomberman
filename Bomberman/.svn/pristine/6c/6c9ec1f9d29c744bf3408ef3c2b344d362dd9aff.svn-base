package bomberman.maingame;

import java.awt.Graphics;
import java.awt.Rectangle;
import java.util.ArrayList;
import java.util.List;

import bomberman.tools.Asset;

/**
 * Map class stores all map relevant data such as borders and various kinds of
 * scattered objects
 * 
 * @author Orkun Somali
 *
 */

public class Map {

	private int x, y, random;


//	public static int koordinateSlop[][] = { { 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 7 },
//										 { 4, 0, 0, 10, 10, 10, 0, 0, 0, 10, 0, 0, 0, 0, 2 }, 
//										 { 4, 0, 9, 10, 9, 0, 9, 0, 9, 10, 9, 0, 9, 0, 2 },
//										 { 4, 0, 0, 10, 10, 10, 0, 10, 0, 10, 0, 0, 0, 0, 2 }, 
//										 { 4, 10, 9, 0, 9, 10, 9, 0, 9, 10, 9, 0, 9, 10, 2 },
//										 { 4, 10, 0, 10, 10, 10, 0, 0, 0, 10, 10, 10, 0, 10, 2 }, 
//										 { 4, 10, 9, 0, 9, 0, 9, 0, 9, 0, 9, 0, 9, 10, 2 },
//										 { 4, 10, 0, 10, 10, 10, 0, 0, 0, 10, 10, 10, 0, 10, 2 },
//										 { 4, 10, 9, 10, 9, 10, 9, 0, 9, 10, 9, 10, 9, 10, 2 },
//										 { 4, 0, 0, 10, 0, 10, 0, 10, 0, 10, 10, 10, 0, 0, 2 }, 
//										 { 4, 0, 9, 10, 9, 10, 9, 0, 9, 10, 9, 0, 9, 0, 2 },
//										 { 4, 0, 0, 10, 10, 10, 0, 0, 0, 10, 0, 0, 0, 0, 2 }, 
//										 { 5, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 8 } };
//	
	public static int koordinateRandom [][] = {{6,1,1,1,1,1,1,1,1,1,1,1,1,1,7},
											   {4,15,15,0,0,0,0,0,0,0,0,0,15,15,2},
											   {4,15,9,0,9,0,9,0,9,0,9,0,9,15,2},
											   {4,0,0,0,0,0,0,0,0,0,0,0,0,0,2},
											   {4,0,9,0,9,0,9,0,9,0,9,0,9,0,2},
											   {4,0,0,0,0,0,0,0,0,0,0,0,0,0,2},
											   {4,0,9,0,9,0,9,0,9,0,9,0,9,0,2},
											   {4,0,0,0,0,0,0,0,0,0,0,0,0,0,2},
											   {4,0,9,0,9,0,9,0,9,0,9,0,9,0,2},
											   {4,0,0,0,0,0,0,0,0,0,0,0,0,0,2},
											   {4,15,9,0,9,0,9,0,9,0,9,0,9,15,2},
											   {4,15,15,0,0,0,0,0,0,0,0,0,15,15,2},
											   {5,3,3,3,3,3,3,3,3,3,3,3,3,3,8}};

	public static List<Rectangle> nzgList = new ArrayList<Rectangle>();
	public static List<Rectangle> zgList = new ArrayList<Rectangle>();
	// public static List<Rectangle> bombRectList = new ArrayList<Rectangle>();
	public static List<Rectangle> blastList = new ArrayList<Rectangle>();

	public Map() {
		init();

	}

	private int randomNumber() {

		random = (int) (Math.random() * 100) + 1;
		//System.out.println(random);

		return random;
	}

	private void init() {
		for (int i = 0; i < 13; i++) {
			x = 0;
			for (int j = 0; j < 15; j++) {

				switch (koordinateRandom[i][j]) {

				case 1:
				case 2:
				case 3:
				case 4:
				case 5:
				case 6:
				case 7:
				case 8:
				case 9:
					nzgList.add(new Rectangle(x, y, 60, 60));
					break;
				case 0:
					if (randomNumber() <= 40) {// 40% probability

						zgList.add(new Rectangle(x, y, 60, 60));
						koordinateRandom[i][j] = 10;
					}
					break;
//				case 10:
//					zgList.add(new Rectangle(x, y, 60, 60));
//					break;

				}

				x += 60;
			}
			y += 60;
		}
		y = 0;
		x = 0;
	}

	private void renderGround(Graphics graphics) {

		graphics.drawImage(Asset.path_ground, x, y, null);
	}

	// public void renderDebug(Graphics graphics) {
	// graphics.drawImage(Asset.ground_coords, x, y, null);
	// }

	private void renderZGNZG(Graphics graphics) {

		for (int i = 0; i < 13; i++) {

			x = 0;
			for (int j = 0; j < 15; j++) {

				switch (koordinateRandom[i][j]) {

				case 1:
					graphics.drawImage(Asset.nzg1, x, y, null);
					break;
				case 2:
					graphics.drawImage(Asset.nzg2, x, y, null);
					break;
				case 3:
					graphics.drawImage(Asset.nzg3, x, y, null);
					break;
				case 4:
					graphics.drawImage(Asset.nzg4, x, y, null);
					break;
				case 5:
					graphics.drawImage(Asset.nzg5, x, y, null);
					break;
				case 6:
					graphics.drawImage(Asset.nzg6, x, y, null);
					break;
				case 7:
					graphics.drawImage(Asset.nzg7, x, y, null);
					break;
				case 8:
					graphics.drawImage(Asset.nzg8, x, y, null);
					break;
				case 9:
					graphics.drawImage(Asset.nzgfest, x, y, null);
					break;
				case 10:
					graphics.drawImage(Asset.zg3, x, y, null);
					break;

				}

				x += 60;
			}

			y += 60;

		}
		y = 0;
		x = 0;
	}

	public void render(Graphics graphics) {
		this.renderGround(graphics);
		this.renderZGNZG(graphics);
	}

	public void update() {
		// Remove ZG from list here later
	}
}