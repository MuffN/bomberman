package bomberman.entities;

import bomberman.prototype.Game;
import bomberman.prototype.Launcher;

/**
 * Character class with usage aimed at
 * player and bot class
 * 
 * @author Lukas Pruetzel
 *
 */
public abstract class Character extends Entity {
	
	/**
	 * determines if a bomb is currently placed: <br>
	 * <b>False:</b> bomb can be placed <br>
	 * <b>True:</b> bomb can not be placed
	 */
	private boolean placedBomb = false;
	
	/**
	 * timer for how long it takes a bomb to detonate <br>
	 * is set inside placeBomb() function
	 */
	private int bombTimer;
	
	/**
	 * Character constructor
	 * @param game Game object, used primarily to access the keyboard inside the player class
	 * @param x the X position at which a character is spawned
	 * @param y the Y position at which a character is spawned
	 * @param size the size of the character, used to determine where a character stops at the borders
	 */
	public Character(Game game, int x, int y, int size) {
		super(game,x,y,size);
	}
	
	/**
	 * method used for placing bombs, sets the bomb timer and permits placement of additional bombs till detonation
	 */
	public void placeBomb() {
		//TODO spawn bomb use entity spawn method
		if(!placedBomb) {
			System.out.println("BOMB PLACED");
			placedBomb=true;
			bombTimer=1000;
		}
		//spawn(); //unimplemented
	}
	
	/**
	 * updates the bomb timer and detonates the bomb if 0 is reached
	 */
	public void updateBomb() {
		
		if(bombTimer<=0) {
			bombTimer=0;
			placedBomb=false;
		} else {
			bombTimer--;
		}
	}
	
	/**
	 * BombStatus getter; returns whether a bomb can be placed or not
	 * @return
	 * <b>true</b> if the character has placed a bomb <br>
	 * <b> false </b> if the character has not placed a bomb
	 */
	public boolean getBombStatus() {
		return placedBomb;
	}
	
	/**
	 * increases the characters X position
	 */
	public void up() {
		if(getY()>60) {
			changeY(-1);
		}
	}
	
	/**
	 * decreases the characters X position
	 */
	public void down() {
		if(getY()<Launcher.gameHeight - getSize()-60) {
			changeY(1);
		}
	}
	
	/**
	 * decreases the characters Y position
	 */
	public void left() {
		if(getX()>60) {
			changeX(-1);
		}
	}
	
	/**
	 * increases the characters Y position
	 */
	public void right() {
		if(getX()<Launcher.gameWidth - getSize()-60) {
			changeX(1);
		}
	}
	
	/**
	 * update method to be implemented in sub classes
	 */
	public abstract void update();
	
}
