package bomberman.entities.items;

import java.awt.Graphics;
import java.awt.Rectangle;
import java.util.ArrayList;
import java.util.List;

//Item object creates new Items, puts them into ItemList and manages them accordingly
public class ItemManager {
	public static List<Item> AllItems = new ArrayList<Item>();
	
	public ItemManager(List<Rectangle> ZgList) {
		if(ZgList.isEmpty()) {
			System.out.println("WARNING: EMPTY ZG LIST"); //Notifiy that ZG List is empty --> no items created
		}
		init(ZgList);
	}
	
	//generate Items beneath ZGs
	public void init(List<Rectangle> ZgList) {
		for(Rectangle zg : ZgList) {
			generateItem((int)zg.getX(), (int)zg.getY());
		}
	}

	public void update() {
		// List is updated here
		
	}

	public void render(Graphics graphics) {
		for(Item item : AllItems) {
			item.render(graphics);
		}
	}
	
	private void generateItem(int x, int y) {
		int tempRandomNumber = randomNumber(); //Zahl zwischen 1 und 100
		System.out.println("Random Number:_" + tempRandomNumber);
		if(tempRandomNumber <= 1) { //10% chance
			AllItems.add(new CharacterSpeedUpgrade(x, y));
		} 
		else if (tempRandomNumber <= 2) { //10% chance
			AllItems.add(new CharacterSpeedDowngrade(x, y));
		}
		else if (tempRandomNumber <= 3) { //10% chance
			AllItems.add(new BlastRadiusUpgrade(x, y));
		}
		else if (tempRandomNumber <= 4) { //10% chance
			AllItems.add(new CharacterSpeedDowngrade(x, y));
		}
		else if (tempRandomNumber <= 5) { //10% chance
			AllItems.add(new BombNumberUpgrade(x, y));
		}
		else if (tempRandomNumber <= 6) { //10% chance
			AllItems.add(new BombNumberDowngrade(x, y));
		}
	}

	private int randomNumber() {
		int random = ((int) (Math.random() * 10)) % 10 + 1;
		return random;
	}
	

}
