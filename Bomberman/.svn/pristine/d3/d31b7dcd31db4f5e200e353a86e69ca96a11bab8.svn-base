package bomberman.entities;

import java.awt.Graphics;

public class Bot extends Character {
	private int direction = 4;
	private int timer = 60;
	private int random;
	private int timerBomb = 60;

	public Bot() {
		this.init();		
	}

	// BOT CODE HERE
	@Override
	public void update() {

		if (this.getMyBomb() != null) {

			if (!this.getMyBomb().decreaseBombTimer()) {

				this.setMyBomb(null);
				this.setPlacedBomb(false);
			}

		} else if (timerBomb <= 0 && randomChance(10)) {

			int bombX = ((this.getX() + 19) / 60) * 60;
			int bombY = ((this.getY() + 19) / 60) * 60;
			placeBomb(bombX, bombY);
		}
		
		if(timerBomb <= 0) {
			timerBomb = 60;
		}
		timerBomb--;
		timer--;
		
		if(isAlive()) {
	
			this.getRectangle().setLocation(getNextX(), getNextY());
	
			if (timer == 0) {
				direction = randomNumber();
	
				timer = 60;
	
			}
			moveDir();
	
			switch (collisionMove(this.getRectangle())) {
			case 1:
				int newDir = randomNumber();
				while (direction == newDir) {
					newDir = randomNumber();
				}
				direction = newDir;
	
				break;
			case 2:
				if (this.getMyBomb() == null) {
					int bombX = ((this.getX() + 19) / 60) * 60;
					int bombY = ((this.getY() + 19) / 60) * 60;
					 placeBomb(bombX, bombY);
	
					 switchDir();
					break;
				}
	
			case 3:
				switchDir();
				break;
	
			}
	

		}
	}

	private int randomNumber() {

		random = ((int) (Math.random() * 10)) % 4 + 1;
		
		return random;
	}

	public void render(Graphics graphics) {

		if (this.getMyBomb() != null) {
			this.getMyBomb().render(graphics);
		}
		graphics.drawImage(this.getImage(), getX(), getY(), 45, 40, null);
	}

	public void init() {
		this.resetNextXY();
	}

	private void switchDir() {

		switch (direction)

		{
		case 1:
			direction = 2;
			break;
		case 2:
			direction = 1;
			break;
		case 3:
			direction = 4;
			break;
		case 4:
			direction = 3;
			break;
		}

	}

	private void moveDir() {
		switch (direction)

		{

		case 1:
			up();
			break;
		case 2:
			down();
			break;
		case 3:
			right();
			break;
		case 4:
			left();
			break;

		}
	}

	private boolean randomChance(double rng) {
		double r = Math.random();
		rng = rng / 100.00;
		if (r <= rng) {
			return true;
		}
		return false;
	}

	@Override
	public String identifyChar() {
		return "Bot";
	}
}
